#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Repack CF WRT for s905x devices using GitHub Actions
# Lisence: MIT
# Repacker : Raditya Budi Handoko <https://github.com/radityabh>
# CFWRT OS by coders-family.me   
#=================================================

name: Build s9xxx

on:
  workflow_dispatch:
#  schedule:
#    - cron: 59 23 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/cr4r/amlogic-s9xxx-openwrt
  REPO_BRANCH: main
  CFWRT_REL: https://github.com/cr4r/CF-WRT/releases/download/cfwrt
  CFWRT_FILENAME: cfwrt-bcm27xx-bcm2710-rpi-3-rootfs.tar.gz
  UPLOAD_RELEASE: true
  TZ: Asia/Jakarta

jobs:
  Build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initial Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H:%M")" >> $GITHUB_ENV
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        sed -i '/CFWrt_/c\ build_image_file="${out_path}/cfwrt-\${build_op}-k\${kernel}.img"' openwrt/makeCFWRT
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Install Feeds
      id: feeds
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
        
    - name: Repacking firmware CF-WRT
      id: build
      run: |
        cd $OPENWRTROOT
        [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
        if wget -S --spider $CFWRT_REL-$(date +"%Y.%m.%d")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #Today Build
            echo "Today build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +"%Y.%m.%d")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +'%Y.%m.%d')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "1 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #Yesterday
            echo "Yesterday build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "1 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '1 day ago')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "2 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #2 Day Before
            echo "2 days ago build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "2 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '2 day ago')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "3 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #3 Days Before
            echo "3 days ago build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "3 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '3 day ago')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "4 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #4 Days Before
            echo "4 days ago build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "4 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '4 day ago')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "5 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #5 Days Before
            echo "5 days ago build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "5 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '5 day ago')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "6 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #6 Days Before
            echo "6 days ago build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "6 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '6 day ago')" >> $GITHUB_ENV
        elif wget -S --spider $CFWRT_REL-$(date +%Y.%m.%d -d "7 day ago")/$CFWRT_FILENAME 2>&1 | grep -q 'HTTP/1.1 200 OK'; then
            #7 Days Before
            echo "7 days ago build found ! Using this build for repack."
            wget -q --show-progress -P openwrt-armvirt $CFWRT_REL-$(date +%Y.%m.%d -d "7 day ago")/$CFWRT_FILENAME
            echo "BUILD_TAG=$(date +%Y.%m.%d -d '7 day ago')" >> $GITHUB_ENV
        fi
        sudo chmod +x makeCFWRT
        sudo ./makeCFWRT -d -b s905x3_s905x2_s905x_s905w_s905d_s922x_s912 -k 5.4.150_5.15.1 -a false
        echo "PACKAGED_OUTPUTPATH=${PWD}/out" >> $GITHUB_ENV
        echo "PACKAGED_OUTPUTDATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
        find . -type f -name '$CFWRT_FILENAME' -exec rm "{}" \;
        echo "::set-output name=status::success"

    - name: Upload Firmware Files to GitHub Release
      uses: ncipollo/release-action@v1
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        token: ${{ secrets.CFWRT_RW }}
        name: CFWrt ${{ env.BUILD_TAG }}
        tag: cfwrt-${{ env.BUILD_TAG }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/cfwrt-s9*

    - name: Delete Workflow Runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 2
        keep_minimum_runs: 3
